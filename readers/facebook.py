import os
import json
import datetime as dt

DEFAULT_PATH = "./messages/inbox/"

# Returns the number of messages for each date, for the given json messages.
def count_messages_json(chats,
                        msgs,
                        sender=None,
                        attachs=True,
                        multattachs=False):
    attachtypes = ["photos", "gifs", "files"]

    if isinstance(sender, str):
        sender = {sender}

    if isinstance(sender, list):
        sender = set(sender)

    for message in chats["messages"]:
        if message["is_unsent"]:
            continue

        if sender is not None and message["sender_name"] not in sender:
            continue

        date = dt.datetime.fromtimestamp(message["timestamp_ms"] // 1000)

        if "content" in message:
            msgs.append(date)

        if not attachs:
            continue

        nbattachs = sum([
            len(message[attach]) for attach in attachtypes if attach in message
        ])
        if multattachs:
            for _ in range(nbattachs):
                msgs.append(date)
        elif nbattachs > 0:
            msgs.append(date)

def count_messages(account,
                   msgs,
                   sender=None,
                   path=DEFAULT_PATH,
                   attachs=True,
                   multattachs=False):
    """Adds the number of messages for each date to the msgs.

    Arguments:
    account: the name of the directory corresponding to the wanted account.
    msgs: the list of message time.
    path: the actual path to the inbox directory. Defaults to  "./messages/inbox".
    sender: either a string corresponding to the name of a sender, a set of senders, or None. If None, all senders are counted.
    attachs: a boolean indicating whether attachments (files, gifs, stickers, images, videos, etc) are counted as messages. Defaults to True.
    multattachs: a boolean indicating whether multiple attachments sent at once are counted several messages.
    Default to False. Doesn't matter if `attachs` is False.
    """

    if isinstance(sender, str):
        sender = {sender}

    if isinstance(sender, list):
        sender = set(sender)

    number = 0
    while True:
        number += 1
        try:
            with open(f"{path}/{account}/message_{number}.json",
                      encoding='utf8') as reader:
                chats = json.load(reader)
                count_messages_json(chats, msgs, sender, attachs, multattachs)
        except FileNotFoundError:
            return

def count_all_messages(msgs,
                       sender,
                       path=DEFAULT_PATH,
                       attachs=True,
                       multattachs=False):
    for file in os.listdir(path):
        if os.path.isdir(f"{path}/{file}"):
            count_messages(file, msgs, sender, path, attachs, multattachs)

# Initiate Facebook command line parameters
def init(parser):
    group = parser.add_argument_group("facebook", "Facebook options")

    group.add_argument(
        '--fbaccount',
        type=str,
        action="store",
        help=
        "the name of the directory of the chat we want to count messages from. Has to be specified to count Facebook messages"
    )
    group.add_argument(
        '--fbpath',
        type=str,
        action="store",
        default="./messages/inbox",
        help=
        f"the path to the inbox directory generated by facebook. Defaults to \"{DEFAULT_PATH}\""
    )
    group.add_argument(
        '--fbsender',
        type=str,
        action='append',
        default=None,
        help=
        "the list of considered senders. If not specified, all messages are counted. Use once per sender"
    )

def parse(msgs, values):
    if values["all"]:
        if values["fbsender"] is not None:
            count_all_messages(msgs,
                               values["fbsender"],
                               path=values["fbpath"],
                               attachs=not values["no_attachs"],
                               multattachs=values["multi_attachs"])
    elif values["fbaccount"] is not None:
        count_messages(values["fbaccount"],
                       msgs,
                       sender=values["fbsender"],
                       path=values["fbpath"],
                       attachs=not values["no_attachs"],
                       multattachs=values["multi_attachs"])
